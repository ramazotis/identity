{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dialog-overview-example-dialog.html","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\"","import { Component, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { saveAs } from 'file-saver';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'identity-app';\n\n  animal: string;\n  name: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(){\n    setTimeout(()=>{this.openDialog();},0);\n    \n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n      data: { name: this.name, animal: this.animal }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.animal = result;\n      if (result === \"ygyYnWI50ECw0YAtx4MTXQ\") {\n        var blob = null;\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", './assets/storage/RM_ID_ygyYnWI50ECw0YAtx4MTXQ_.png');\n        xhr.responseType = \"blob\";//force the HTTP response, response-type header to be blob\n        xhr.onload = function () {\n          blob = xhr.response;//xhr.response is now a blob object\n          var file = new File([blob], 'RM_ID_ygyYnWI50ECw0YAtx4MTXQ_.png', { type: 'image/png', lastModified: Date.now() });\n          saveAs(file, \"RM_ID_ygyYnWI50ECw0YAtx4MTXQ_.png\");\n        }\n        xhr.send()\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDialogModule ,MatNativeDateModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppComponent, DialogOverviewExampleDialog } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent, DialogOverviewExampleDialog\n  ],\n  imports: [\n    BrowserModule,\n    NoopAnimationsModule,\n    FormsModule,\n    MatDialogModule ,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  \n  exports: [MatDialogModule, MatFormFieldModule, MatInputModule],\n  entryComponents: [DialogOverviewExampleDialog],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<!-- <h1 mat-dialog-title>Hi {{data.name}}</h1> -->\\r\\n<div mat-dialog-content>\\r\\n  <p>Please, enter personal key</p>\\r\\n  <mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"data.animal\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial>Ok</button>\\r\\n</div>\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}